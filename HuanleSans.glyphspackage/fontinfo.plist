{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = openTypeOS2Type;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = "Write lastChange";
value = 0;
},
{
name = fsType;
value = (
);
},
{
name = "Use Line Breaks";
value = 1;
},
{
name = "Update Features";
value = 1;
}
);
date = "2024-01-01 11:00:45 +0000";
familyName = "Huanle Sans";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn NLD;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature c2sc;
feature smcp;
feature subs;
feature sinf;
feature sups;
feature calt;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb almostequaltoabovecomb arrowheadrightabovecomb brevecomb breveinvertedcomb candraBinducomb caroncomb circumflexcomb commaabovecomb commaaboverightcomb commareversedabovecomb commaturnedabovecomb dblgravecomb dbloverlinecomb dblverticallineabovecomb dieresiscomb dotaccentcomb fermatacomb gbridgeabovecomb gravecomb homotheticabovecomb hookabovecomb hungarumlautcomb leftangleabovecomb lefthalfringabovecomb macroncomb nottildeabovecomb righthalfringabovecomb ringcomb tildecomb tildedoublecomb tildeverticalcomb verticallineabovecomb xabovecomb zigzagabovecomb];
	@CombiningNonTopAccents = [acutebelowcomb arrowdoublerightbelowcomb arrowheadleftbelowcomb arrowheadrightbelowcomb arrowheadrightheadupbelowcomb arrowleftrightbelowcomb arrowupbelowcomb asteriskbelowcomb brevebelowcomb breveinvertedbelowcomb bridgebelowcomb bridgeinvertedbelowcomb caronbelowcomb cedillacomb circumflexbelowcomb dblarchinvertedbelowcomb dbllowlinecomb dieresisbelowcomb dotbelowcomb doublebrevebelowcomb doublemacronbelowcomb doubleringbelowcomb doubleverticallinebelowcomb downtackbelowcomb equalbelowcomb gravebelowcomb leftanglebelowcomb lefttackbelowcomb lowlinecomb macronbelowcomb ogonekcomb plusbelowcomb righttackbelowcomb ringbelowcomb ringhalfleftbelowcomb ringhalfrightbelowcomb seagullbelowcomb squarebelowcomb tildebelowcomb uptackbelowcomb verticallinebelowcomb xbelowcomb breveinverteddoublecomb doublebrevecomb graphemejoinercomb doublemacroncomb dotaboverightcomb horncomb slashlongcomb slashshortcomb strokelongcomb strokeshortcomb tildeoverlaycomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
} ccmp_Other_1;

lookup ccmp_Other_2 {
	lookupflag 0;
	sub dieresiscomb acutecomb by dieresiscomb_acutecomb;
	sub dieresiscomb caroncomb by dieresiscomb_caroncomb;
	sub dieresiscomb gravecomb by dieresiscomb_gravecomb;
	sub dieresiscomb macroncomb by dieresiscomb_macroncomb;
	sub dieresiscomb ringcomb by dieresiscomb_ringcomb;
} ccmp_Other_2;
";
tag = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {
	script latn;
	language AZE;
	sub i by idotaccent;
	language CRT;
	sub i by idotaccent;
	language KAZ;
	sub i by idotaccent;
	language TAT;
	sub i by idotaccent;
	language TRK;
	sub i by idotaccent;
} locl_latn_0;

lookup locl_latn_1 {
	script latn;
	language ROM;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
	language MOL;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;

lookup locl_latn_2 {
	script latn;
	language NLD;
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_2;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
sub minus by minus.subs;
sub plus by plus.subs;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
sub minus by minus.subs;
sub plus by plus.subs;
";
tag = sinf;
},
{
automatic = 1;
code = "sub h by h.sups;
sub i by i.sups;
sub j by j.sups;
sub l by l.sups;
sub n by n.sups;
sub r by r.sups;
sub s by s.sups;
sub w by w.sups;
sub x by x.sups;
sub y by y.sups;
sub N by N.sups;
sub a by a.sups;
sub b by b.sups;
sub c by c.sups;
sub d by d.sups;
sub e by e.sups;
sub f by f.sups;
sub g by g.sups;
sub k by k.sups;
sub m by m.sups;
sub o by o.sups;
sub p by p.sups;
sub t by t.sups;
sub u by u.sups;
sub v by v.sups;
sub z by z.sups;
sub zero by zero.sups;
sub one by one.sups;
sub two by two.sups;
sub three by three.sups;
sub four by four.sups;
sub five by five.sups;
sub six by six.sups;
sub seven by seven.sups;
sub eight by eight.sups;
sub nine by nine.sups;
sub minus by minus.sups;
sub plus by plus.sups;
sub q by q.sups;
";
tag = sups;
},
{
automatic = 1;
code = "sub A by a.sc;
sub AE by ae.sc;
sub B by b.sc;
sub C by c.sc;
sub D by d.sc;
sub Eth by eth.sc;
sub Dcroat by dcroat.sc;
sub E by e.sc;
sub Schwa by schwa.sc;
sub Ezh by ezh.sc;
sub F by f.sc;
sub G by g.sc;
sub H by h.sc;
sub I by i.sc;
sub J by j.sc;
sub K by k.sc;
sub L by l.sc;
sub Lslash by lslash.sc;
sub M by m.sc;
sub N by n.sc;
sub O by o.sc;
sub OE by oe.sc;
sub P by p.sc;
sub Thorn by thorn.sc;
sub Q by q.sc;
sub R by r.sc;
sub S by s.sc;
sub Germandbls by germandbls.sc;
sub T by t.sc;
sub U by u.sc;
sub V by v.sc;
sub W by w.sc;
sub X by x.sc;
sub Y by y.sc;
sub Z by z.sc;
sub zero by zero.sc;
sub one by one.sc;
sub two by two.sc;
sub three by three.sc;
sub four by four.sc;
sub five by five.sc;
sub six by six.sc;
sub seven by seven.sc;
sub eight by eight.sc;
sub nine by nine.sc;
";
tag = c2sc;
},
{
automatic = 1;
code = "sub a by a.sc;
sub ae by ae.sc;
sub b by b.sc;
sub c by c.sc;
sub d by d.sc;
sub eth by eth.sc;
sub dcroat by dcroat.sc;
sub e by e.sc;
sub schwa by schwa.sc;
sub ezh by ezh.sc;
sub f by f.sc;
sub g by g.sc;
sub h by h.sc;
sub i by i.sc;
sub j by j.sc;
sub jdotless by j.sc;
sub k by k.sc;
sub l by l.sc;
sub lslash by lslash.sc;
sub m by m.sc;
sub n by n.sc;
sub o by o.sc;
sub oe by oe.sc;
sub p by p.sc;
sub thorn by thorn.sc;
sub q by q.sc;
sub r by r.sc;
sub s by s.sc;
sub germandbls by germandbls.sc;
sub t by t.sc;
sub u by u.sc;
sub v by v.sc;
sub w by w.sc;
sub x by x.sc;
sub y by y.sc;
sub z by z.sc;
sub zero by zero.sc;
sub one by one.sc;
sub two by two.sc;
sub three by three.sc;
sub four by four.sc;
sub five by five.sc;
sub six by six.sc;
sub seven by seven.sc;
sub eight by eight.sc;
sub nine by nine.sc;
";
tag = smcp;
},
{
code = "# @a
@b = [ b B ] ;
@c = [ c C ] ;
@d = [ d D ] ;
# @e
@f = [ f F ] ;
@g = [ g G ] ;
@h = [ h H ] ;
# @i
@j = [ j J j.ZHP J.ZHP ] ;
@k = [ k K ] ;
@l = [ l L ] ;
@m = [ m M ] ;
@n = [ n N ] ;
# @o
@p = [ p P ] ;
@q = [ q Q q.ZHP Q.ZHP ] ;
@r = [ r R ] ;
@s = [ s S ] ;
@t = [ t T ] ;
# @u
# @yu
@v = [ v V ] ;
@w = [ w W ] ;
@x = [ x X x.ZHP X.ZHP ] ;
@y = [ y Y ] ;
@z = [ z Z ] ;

@a =       [ a amacron aacute acaron agrave adotbelow                              
             A Amacron Aacute Acaron Agrave Adotbelow                               ] ;
@e =       [ e emacron eacute ecaron egrave edotbelow                              
             E Emacron Eacute Ecaron Egrave Edotbelow                               ] ;
@i =       [ i imacron iacute icaron igrave idotbelow                              
             I Imacron Iacute Icaron Igrave Idotbelow                               ] ;
@o =       [ o omacron oacute ocaron ograve odotbelow                              
             O Omacron Oacute Ocaron Ograve Odotbelow                               ] ;
@u =       [ u umacron uacute ucaron ugrave udotbelow                              
             U Umacron Uacute Ucaron Ugrave Udotbelow                               ] ;
@yu =      [ udieresis udieresismacron udieresisacute udieresiscaron udieresisgrave
             Udieresis Udieresismacron Udieresisacute Udieresiscaron Udieresisgrave ] ;

@a.mid =   [ a.mid amacron.mid aacute.mid acaron.mid agrave.mid adotbelow.mid      
             A.mid Amacron.mid Aacute.mid Acaron.mid Agrave.mid Adotbelow.mid       ] ;
@a.back =  [ a.back amacron.back aacute.back acaron.back agrave.back adotbelow.back
             A.back Amacron.back Aacute.back Acaron.back Agrave.back Adotbelow.back ] ;
@a.a =     [ @a @a.mid @a.back ] ;

@e.di =    [ e.di emacron.di eacute.di ecaron.di egrave.di edotbelow.di                  
             E.di Emacron.di Eacute.di Ecaron.di Egrave.di Edotbelow.di                   ] ;
@e.front = [ e.front emacron.front eacute.front ecaron.front egrave.front edotbelow.front
             E.front Emacron.front Eacute.front Ecaron.front Egrave.front Edotbelow.front ] ;
@e.a =     [ @e @e.di @e.front ] ;

@i.buzz =  [ i.buzz imacron.buzz iacute.buzz icaron.buzz igrave.buzz idotbelow.buzz
             I.buzz Imacron.buzz Iacute.buzz Icaron.buzz Igrave.buzz Idotbelow.buzz ] ;
@i.a =     [ @i @i.buzz ] ;

@o.di =    [ o.di omacron.di oacute.di ocaron.di ograve.di odotbelow.di
             O.di Omacron.di Oacute.di Ocaron.di Ograve.di Odotbelow.di ] ;
@o.a =     [ @o @o.di ] ;

@u.di =    [ u.di umacron.di uacute.di ucaron.di ugrave.di udotbelow.di
             U.di Umacron.di Uacute.di Ucaron.di Ugrave.di Udotbelow.di ] ;
@u.a =     [ @u @u.di ] ;

@u.yu =    [ u.yu umacron.yu uacute.yu ucaron.yu ugrave.yu udotbelow.yu
             U.yu Umacron.yu Uacute.yu Ucaron.yu Ugrave.yu Udotbelow.yu ] ;
@yu.a =    [ @yu @u.yu ] ;

@eng = [ eng Eng ] ;

@sibilants = [ z c s r
               Z C S R
               zcedilla ccedilla scedilla rcommaaccent
               Zcedilla Ccedilla Scedilla Rcommaaccent
               zcircumflex ccircumflex scircumflex
               Zcircumflex Ccircumflex Scircumflex     ] ;

@front = [ y i y.yu u.yu udieresis
           Y I Y.yu U.yu Udieresis ] ;



lookup SUB_ZHP_cleanup {
	lookupflag IgnoreMarks ;

	sub [ v V ] by [ udieresis Udieresis ] ;

	# explicit single storey variants (ɑ, ɡ) occasionally found in Chinese material
	sub [ alpha-latin Alpha-latin ] by [ a A ] ;
	sub [ gsingle Gscript ] by [ g G ] ;

} SUB_ZHP_cleanup ;



lookup SUB_ZHP_decompose {
	lookupflag IgnoreMarks ;

	# nmacron does not have a unicode
	sub [ ngrave Ngrave ]' by [ n N ] gravecomb ;
	sub [ nacute Nacute ]' by [ n N ] acutecomb ;
	sub [ ncaron Ncaron ]' by [ n N ] caroncomb ;

	sub [ aring Aring uring Uring ]' by [ a A u U ] ringcomb ;

} SUB_ZHP_decompose ;



lookup SUB_ZHP_basic {
	lookupflag IgnoreMarks ;

	sub [ j J ]' by [ j.ZHP J.ZHP ] ;
	sub [ q Q ]' by [ q.ZHP Q.ZHP ] ;
	sub [ x X ]' by [ x.ZHP X.ZHP ] ;

	sub [ y Y ]' @u.a by [ y.yu Y.yu ] ;
	sub [ @j @q @x y.yu Y.yu ] @u' by @u.yu ;
	sub [ @n @l ] u' @e.a by u.yu ;

	# e.g. fǎn[]gǎn vs fāng’àn
	ignore sub @n' @g' [ @a.a @e.a @i.a @o.a @u.a @yu.a ] ;
	sub n' g' by eng ;
	sub N' [ G g ]' by Eng ;

	# official shorthands for zh/ch/sh, but easy to confuse with third tone accents, better to put something below characters
	sub [ zcircumflex Zcircumflex ]' by [ zcedilla Zcedilla ] ;
	sub [ ccircumflex Ccircumflex ]' by [ ccedilla Ccedilla ] ;
	sub [ scircumflex Scircumflex ]' by [ scedilla Scedilla ] ;

	sub z' [ h   ]' by zcedilla ;
	sub Z' [ h H ]' by Zcedilla ;
	sub c' [ h   ]' by ccedilla ;
	sub C' [ h H ]' by Ccedilla ;
	sub s' [ h   ]' by scedilla ;
	sub S' [ h H ]' by Scedilla ;
	sub    [ r R ]' [ @a.a @e.a @i.a @o.a @u.a @yu.a ] by [ rcommaaccent Rcommaaccent ] ;

	sub @sibilants @i' by @i.buzz ;

} SUB_ZHP_basic ;



lookup SUB_ZHP_e.front {
	lookupflag IgnoreMarks ;

	sub @e' @i.a by @e.front ;
	sub @front @e' by @e.front ;

} SUB_ZHP_e.front ;



lookup SUB_ZHP_e.default {
	lookupflag IgnoreMarks ;

	### easier to assume the diphthong is the default and then change e.di
	sub @e' by @e.di ;

} SUB_ZHP_e.default ;



lookup SUB_ZHP_e.di {
	lookupflag IgnoreMarks ;

	ignore sub @e.a' [ @n @r ] [ @a.a @e.a @i.a @o.a @u.a @yu.a ] ;
	sub @e.di' [ @n @eng @r ] by @e ;

} SUB_ZHP_e.di ;



lookup SUB_ZHP_uen {
	lookupflag IgnoreMarks ;

	### should not be needed, these u already transformed into *.yu
	#ignore sub [ @j @q @x y.yu Y.yu ] @u' @n ;
	### some diphthongs would break, e.g. shòunà
	ignore sub [ @a.a @e.a @i.a @o.a @u.a @yu.a ] @u' @n ;
	### ensure n does not belong to next syllable
	ignore sub @u' @n [ @a.a @e.a @i.a @o.a @u.a @yu.a ] ;
	### u (not w) indicates another preceding initial, we need no context before, only after.
	sub @u' @n by @u.di ;

} SUB_ZHP_uen ;



lookup SUB_ZHP_a.mid {
	lookupflag IgnoreMarks ;

	### -ian and -u[ ü ]an
	### a takes the tone mark, not i or ü
	ignore sub @front @a' @n [ @a.a @e.a @i.a @o.a @u.a @yu.a ] ;
	sub @front @a' @n by @a.mid ;

} SUB_ZHP_a.mid ;



lookup SUB_ZHP_a.back {
	lookupflag IgnoreMarks ;

	### assume that if o- would be a new syllable it would have an apostrophe before
	sub @a' [ @eng o O ] by @a.back ;

} SUB_ZHP_a.back ;



lookup SUB_ZHP_uo {
	lookupflag IgnoreMarks ;

	ignore sub [ @b @p @m @f ] @o' @u.a ;
	sub [ @b @p @m @f ] @o' by @o.di ;

} SUB_ZHP_uo ;



lookup SUB_ZHP_iou {
	lookupflag IgnoreMarks ;

	### syllables do not start with u, no need for accomodations
	sub @i @u' by @u.di ;

} SUB_ZHP_iou ;



lookup SUB_ZHP_uei {
	lookupflag IgnoreMarks ;

	### syllables do not start with i, no need for accomodations
	sub @u' @i.a by @u.di ;

} SUB_ZHP_uei ;



### other lookups don't account for these
### moving this section earlier will probably break a whole lot
lookup SUB_ZHP_basic_post {
	lookupflag IgnoreMarks ;

	sub i by idotless ;
	sub [ rcommaaccent Rcommaaccent ] by [ rcommaaccent.ZHP Rcommaaccent.ZHP ] ;
	#sub g by gsingle ;

	# rcircumflex?

} SUB_ZHP_basic_post ;
";
tag = calt;
}
);
fontMaster = (
{
customParameters = (
{
name = underlineThickness;
value = 35.71429;
},
{
name = underlinePosition;
value = -185;
},
{
name = paramArea;
value = "493";
},
{
name = paramDepth;
value = "34";
},
{
name = paramOver;
value = "15";
},
{
name = typoAscender;
value = 800;
},
{
name = typoDescender;
value = -200;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 800;
},
{
name = winDescent;
value = 200;
},
{
name = hheaAscender;
value = 800;
},
{
name = hheaDescender;
value = -200;
},
{
name = hheaLineGap;
value = 0;
},
{
name = "Alignment Zones";
value = (
{
pos = 586;
size = 12;
},
{
pos = "-93";
size = "-12";
}
);
}
);
id = "DE016B7A-D921-4FAF-BA9C-94A7D66B995D";
metricValues = (
{
over = 12;
pos = 700;
},
{
over = 12;
pos = 640;
},
{
over = 12;
pos = 457;
},
{
over = -12;
},
{
over = -12;
pos = -185;
},
{
over = 12;
pos = 497;
},
{
}
);
name = "76";
stemValues = (
48,
54,
56,
61,
64,
69
);
}
);
instances = (
{
customParameters = (
{
name = Filter;
value = "AddExtremes;";
},
{
name = "Update Features";
value = 1;
},
{
name = "TTFAutohint options";
value = "--increase-x-height=17";
}
);
instanceInterpolations = {
"DE016B7A-D921-4FAF-BA9C-94A7D66B995D" = 1;
};
name = Pinyin;
properties = (
{
key = sampleTexts;
values = (
{
language = dflt;
value = "bō xiǔ rì zhè fǎ yán yāng jiǎ què chuí shěng húnán hūn’àn QIÁNFĀNG";
}
);
},
{
key = familyNames;
values = (
{
language = dflt;
value = "Huānlè Sans [Pīnyīn]";
},
{
language = ZHS;
value = "欢乐无衬线【拼音】";
},
{
language = ZHT;
value = "歡樂無襯線【拼音】";
},
{
language = ZHH;
value = "歡樂無襯線【拼音】";
}
);
},
{
key = styleNames;
values = (
{
language = dflt;
value = "Pīnyīn";
},
{
language = ZHS;
value = "拼音";
},
{
language = ZHT;
value = "拼音";
},
{
language = ZHH;
value = "拼音";
}
);
},
{
key = preferredFamilyNames;
values = (
{
language = dflt;
value = "Huānlè Sans [Pīnyīn]";
},
{
language = ZHS;
value = "欢乐无衬线【拼音】";
},
{
language = ZHT;
value = "歡樂無襯線【拼音】";
},
{
language = ZHH;
value = "歡樂無襯線【拼音】";
}
);
},
{
key = postscriptFontName;
value = HuanleSansPinyin;
},
{
key = postscriptFullName;
value = "Huanle Sans Pinyin";
}
);
},
{
customParameters = (
{
name = Filter;
value = "AddExtremes;";
},
{
name = "Update Features";
value = 1;
},
{
name = "TTFAutohint options";
value = "--increase-x-height=17";
},
{
name = "Remove Features";
value = (
calt
);
},
{
name = "Update Features";
value = 1;
}
);
instanceInterpolations = {
"DE016B7A-D921-4FAF-BA9C-94A7D66B995D" = 1;
};
name = Latin;
properties = (
{
key = sampleTexts;
values = (
{
language = dflt;
value = " zA̤̍͘ză̤͘zĔ̤͘ze̤̋͘zƗ̤̀͘zɨ̤̂͘zƟ̤̍͘zɵ̤̂͘zɄ̤̀͘zʉ̤̂͘zM̤̋zm̤̆Zᴺzⁿz";
}
);
},
{
key = styleNames;
values = (
{
language = dflt;
value = Latin;
},
{
language = ZHS;
value = "拉丁";
},
{
language = ZHT;
value = "拉丁";
},
{
language = ZHH;
value = "拉丁";
}
);
},
{
key = postscriptFullName;
value = "Huanle Sans";
},
{
key = postscriptFontName;
value = HuanleSans;
}
);
}
);
kerningLTR = {
"DE016B7A-D921-4FAF-BA9C-94A7D66B995D" = {
"@MMK_L_A" = {
"@MMK_R_O" = -13;
"@MMK_R_T" = -56;
"@MMK_R_U" = -16;
"@MMK_R_V" = -20;
"@MMK_R_X" = -13;
"@MMK_R_Y" = -46;
"@MMK_R_asterisk" = -62;
"@MMK_R_hyphen" = -51;
"@MMK_R_n" = -12;
"@MMK_R_o" = -19;
"@MMK_R_p" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -18;
"@MMK_R_y" = -4;
};
"@MMK_L_A.sups" = {
"@MMK_R_T.sups" = -38;
"@MMK_R_Y.sups" = -32;
"@MMK_R_o.sups" = -12;
"@MMK_R_p.sups" = -13;
"@MMK_R_u.sups" = -13;
"@MMK_R_v.sups" = -13;
};
"@MMK_L_B" = {
"@MMK_R_Y" = 3;
"@MMK_R_asterisk" = -15;
"@MMK_R_n" = -11;
"@MMK_R_o" = -11;
"@MMK_R_p" = -11;
"@MMK_R_period" = -43;
"@MMK_R_z" = -11;
};
"@MMK_L_B.sups" = {
"@MMK_R_n.sups" = -3;
"@MMK_R_o.sups" = -3;
"@MMK_R_p.sups" = -3;
"@MMK_R_v.sups" = -3;
};
"@MMK_L_C" = {
"@MMK_R_O" = -3;
"@MMK_R_Phi" = -52;
"@MMK_R_g" = -10;
"@MMK_R_hyphen" = -32;
"@MMK_R_n" = -21;
"@MMK_R_o" = -21;
"@MMK_R_p" = -15;
"@MMK_R_s" = -3;
"@MMK_R_t" = -3;
"@MMK_R_u" = -14;
"@MMK_R_v" = -10;
"@MMK_R_z" = -22;
};
"@MMK_L_E" = {
"@MMK_R_O" = -17;
"@MMK_R_Phi" = -15;
"@MMK_R_a" = -21;
"@MMK_R_f" = -21;
"@MMK_R_g" = -44;
"@MMK_R_h" = -3;
"@MMK_R_hyphen" = -33;
"@MMK_R_n" = -10;
"@MMK_R_o" = -27;
"@MMK_R_u" = -21;
"@MMK_R_v" = -33;
"@MMK_R_z" = -21;
};
"@MMK_L_E.sups" = {
"@MMK_R_O.sups" = -4;
"@MMK_R_o.sups" = -16;
"@MMK_R_u.sups" = -13;
"@MMK_R_v.sups" = -20;
};
"@MMK_L_F" = {
"@MMK_R_A" = -25;
"@MMK_R_J" = 33;
"@MMK_R_M" = -10;
"@MMK_R_O" = -3;
"@MMK_R_Phi" = -22;
"@MMK_R_S" = -3;
"@MMK_R_T" = 23;
"@MMK_R_V" = 15;
"@MMK_R_X" = 16;
"@MMK_R_Y" = 18;
"@MMK_R_a" = -30;
"@MMK_R_asterisk" = 13;
"@MMK_R_g" = -44;
"@MMK_R_h" = -3;
"@MMK_R_n" = -40;
"@MMK_R_o" = -38;
"@MMK_R_p" = -25;
"@MMK_R_period" = -104;
"@MMK_R_s" = -27;
"@MMK_R_u" = -50;
"@MMK_R_v" = -15;
"@MMK_R_x" = -30;
};
"@MMK_L_G" = {
"@MMK_R_A" = 3;
"@MMK_R_a" = -10;
"@MMK_R_g" = -20;
"@MMK_R_h" = -10;
"@MMK_R_n" = -20;
"@MMK_R_o" = -21;
"@MMK_R_u" = -21;
"@MMK_R_v" = -20;
};
"@MMK_L_Gamma" = {
"@MMK_R_A" = -77;
"@MMK_R_M" = -20;
"@MMK_R_O" = -59;
"@MMK_R_Omega" = -36;
"@MMK_R_Phi" = -66;
"@MMK_R_T" = 10;
"@MMK_R_X" = -33;
"@MMK_R_a" = -105;
"@MMK_R_colon" = -85;
"@MMK_R_n" = -105;
"@MMK_R_o" = -113;
"@MMK_R_period" = -187;
"@MMK_R_u" = -90;
"@MMK_R_v" = -95;
"@MMK_R_x" = -93;
};
"@MMK_L_Gamma.sups" = {
"@MMK_R_A.sups" = -34;
"@MMK_R_O.sups" = -24;
"@MMK_R_Omega.sups" = -24;
};
"@MMK_L_H" = {
"@MMK_R_O" = -18;
"@MMK_R_T" = -15;
"@MMK_R_V" = -18;
"@MMK_R_a" = -21;
"@MMK_R_g" = -26;
"@MMK_R_h" = -6;
"@MMK_R_hyphen" = -30;
"@MMK_R_n" = -11;
"@MMK_R_o" = -20;
"@MMK_R_p" = 3;
"@MMK_R_period" = -30;
"@MMK_R_s" = -22;
"@MMK_R_u" = -10;
"@MMK_R_v" = -32;
};
"@MMK_L_H.sups" = {
"@MMK_R_h.sups" = -4;
"@MMK_R_n.sups" = -3;
"@MMK_R_o.sups" = -13;
"@MMK_R_v.sups" = -21;
};
"@MMK_L_L" = {
"@MMK_R_O" = -36;
"@MMK_R_T" = -46;
"@MMK_R_U" = 3;
"@MMK_R_V" = -49;
"@MMK_R_Y" = -49;
"@MMK_R_asterisk" = -97;
"@MMK_R_o" = -15;
"@MMK_R_u" = -3;
"@MMK_R_v" = -23;
"@MMK_R_y" = -15;
};
"@MMK_L_M" = {
"@MMK_R_V" = -10;
"@MMK_R_a" = -10;
"@MMK_R_asterisk" = -3;
"@MMK_R_hyphen" = -30;
"@MMK_R_n" = -11;
"@MMK_R_o" = -21;
"@MMK_R_u" = -21;
"@MMK_R_v" = -20;
};
"@MMK_L_M.sups" = {
"@MMK_R_n.sups" = -3;
"@MMK_R_o.sups" = -13;
"@MMK_R_u.sups" = -13;
"@MMK_R_v.sups" = -14;
};
"@MMK_L_O" = {
"@MMK_R_A" = -13;
"@MMK_R_T" = -42;
"@MMK_R_V" = -15;
"@MMK_R_X" = -22;
"@MMK_R_Xi" = -17;
"@MMK_R_Y" = -33;
"@MMK_R_asterisk" = -15;
"@MMK_R_j" = 32;
"@MMK_R_period" = -45;
"@MMK_R_y" = 35;
};
"@MMK_L_O.sups" = {
"@MMK_R_T.sups" = -28;
"@MMK_R_X.sups" = -15;
"@MMK_R_Xi.sups" = -4;
"@MMK_R_Y.sups" = -23;
};
"@MMK_L_P" = {
"@MMK_R_A" = -49;
"@MMK_R_T" = -3;
"@MMK_R_V" = -17;
"@MMK_R_Y" = -15;
"@MMK_R_a" = -27;
"@MMK_R_asterisk" = -3;
"@MMK_R_g" = -10;
"@MMK_R_hyphen" = -74;
"@MMK_R_n" = -15;
"@MMK_R_o" = -44;
"@MMK_R_p" = -15;
"@MMK_R_period" = -187;
"@MMK_R_s" = -17;
"@MMK_R_u" = -15;
};
"@MMK_L_P.sups" = {
"@MMK_R_A.sups" = -34;
"@MMK_R_Y.sups" = -4;
"@MMK_R_n.sups" = -4;
"@MMK_R_o.sups" = -29;
"@MMK_R_p.sups" = -4;
"@MMK_R_u.sups" = -4;
};
"@MMK_L_Phi" = {
"@MMK_R_T" = -37;
"@MMK_R_V" = -27;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -8;
"@MMK_R_period" = -30;
};
"@MMK_L_R" = {
"@MMK_R_O" = -10;
"@MMK_R_Phi" = -30;
"@MMK_R_T" = -40;
"@MMK_R_U" = -21;
"@MMK_R_V" = -24;
"@MMK_R_Y" = -29;
"@MMK_R_a" = -22;
"@MMK_R_asterisk" = 3;
"@MMK_R_g" = -17;
"@MMK_R_h" = -11;
"@MMK_R_hyphen" = -74;
"@MMK_R_n" = -19;
"@MMK_R_o" = -37;
"@MMK_R_p" = -20;
"@MMK_R_period" = -3;
"@MMK_R_s" = -22;
"@MMK_R_u" = -21;
"@MMK_R_v" = -21;
"@MMK_R_y" = -21;
};
"@MMK_L_S" = {
"@MMK_R_T" = -17;
"@MMK_R_a" = -21;
"@MMK_R_h" = -11;
"@MMK_R_j" = -11;
"@MMK_R_n" = -10;
"@MMK_R_o" = -21;
"@MMK_R_period" = -65;
"@MMK_R_v" = -20;
};
"@MMK_L_T" = {
"@MMK_R_A" = -56;
"@MMK_R_O" = -42;
"@MMK_R_Phi" = -37;
"@MMK_R_S" = -17;
"@MMK_R_X" = -15;
"@MMK_R_a" = -67;
"@MMK_R_colon" = -33;
"@MMK_R_g" = -67;
"@MMK_R_h" = -14;
"@MMK_R_hyphen" = -70;
"@MMK_R_j" = -44;
"@MMK_R_n" = -65;
"@MMK_R_o" = -67;
"@MMK_R_p" = -67;
"@MMK_R_period" = -83;
"@MMK_R_s" = -67;
"@MMK_R_t" = -35;
"@MMK_R_u" = -75;
"@MMK_R_v" = -67;
"@MMK_R_x" = -49;
"@MMK_R_y" = -67;
"@MMK_R_z" = -67;
};
"@MMK_L_T.sups" = {
"@MMK_R_A.sups" = -38;
"@MMK_R_O.sups" = -28;
"@MMK_R_h.sups" = -5;
"@MMK_R_n.sups" = -43;
"@MMK_R_o.sups" = -45;
"@MMK_R_p.sups" = -45;
"@MMK_R_u.sups" = -50;
"@MMK_R_v.sups" = -45;
};
"@MMK_L_U" = {
"@MMK_R_A" = -16;
"@MMK_R_a" = -21;
"@MMK_R_hyphen" = -30;
"@MMK_R_n" = -21;
"@MMK_R_o" = -33;
"@MMK_R_p" = -21;
"@MMK_R_period" = -40;
};
"@MMK_L_V" = {
"@MMK_R_A" = -20;
"@MMK_R_M" = -10;
"@MMK_R_O" = -15;
"@MMK_R_Phi" = -27;
"@MMK_R_S" = -16;
"@MMK_R_X" = -10;
"@MMK_R_a" = -53;
"@MMK_R_asterisk" = 15;
"@MMK_R_f" = -32;
"@MMK_R_g" = -55;
"@MMK_R_h" = -12;
"@MMK_R_hyphen" = -83;
"@MMK_R_j" = -33;
"@MMK_R_n" = -47;
"@MMK_R_o" = -43;
"@MMK_R_p" = -55;
"@MMK_R_period" = -92;
"@MMK_R_s" = -49;
"@MMK_R_t" = -10;
"@MMK_R_u" = -51;
"@MMK_R_v" = -23;
"@MMK_R_x" = -30;
"@MMK_R_y" = -30;
"@MMK_R_z" = -37;
};
"@MMK_L_X" = {
"@MMK_R_A" = -3;
"@MMK_R_O" = -22;
"@MMK_R_Phi" = -30;
"@MMK_R_T" = -10;
"@MMK_R_a" = -10;
"@MMK_R_hyphen" = -60;
"@MMK_R_n" = -12;
"@MMK_R_o" = -24;
"@MMK_R_p" = -12;
"@MMK_R_u" = -16;
"@MMK_R_v" = -26;
"@MMK_R_y" = -16;
};
"@MMK_L_X.sups" = {
"@MMK_R_O.sups" = -15;
"@MMK_R_o.sups" = -16;
"@MMK_R_u.sups" = -11;
"@MMK_R_v.sups" = -18;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -46;
"@MMK_R_O" = -33;
"@MMK_R_Phi" = -8;
"@MMK_R_S" = 3;
"@MMK_R_X" = -22;
"@MMK_R_a" = -63;
"@MMK_R_asterisk" = 10;
"@MMK_R_f" = -30;
"@MMK_R_g" = -73;
"@MMK_R_h" = -3;
"@MMK_R_hyphen" = -55;
"@MMK_R_l" = -10;
"@MMK_R_n" = -63;
"@MMK_R_o" = -63;
"@MMK_R_p" = -63;
"@MMK_R_period" = -101;
"@MMK_R_s" = -43;
"@MMK_R_t" = -23;
"@MMK_R_u" = -63;
"@MMK_R_v" = -38;
"@MMK_R_x" = -45;
"@MMK_R_y" = -33;
"@MMK_R_z" = -35;
};
"@MMK_L_Y.sups" = {
"@MMK_R_A.sups" = -32;
"@MMK_R_O.sups" = -23;
"@MMK_R_n.sups" = -43;
"@MMK_R_o.sups" = -43;
"@MMK_R_p.sups" = -43;
"@MMK_R_u.sups" = -43;
"@MMK_R_v.sups" = -26;
};
"@MMK_L_Z" = {
"@MMK_R_g" = -17;
"@MMK_R_o" = -30;
"@MMK_R_period" = -3;
"@MMK_R_u" = -17;
"@MMK_R_v" = -22;
};
"@MMK_L_Z.sups" = {
"@MMK_R_o.sups" = -20;
"@MMK_R_u.sups" = -4;
"@MMK_R_v.sups" = -16;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -62;
"@MMK_R_M" = -3;
"@MMK_R_O" = -17;
"@MMK_R_V" = 15;
"@MMK_R_Y" = 10;
"@MMK_R_a" = -11;
"@MMK_R_g" = -58;
"@MMK_R_n" = -20;
"@MMK_R_o" = -37;
"@MMK_R_p" = -20;
"@MMK_R_period" = -80;
"@MMK_R_u" = -20;
};
"@MMK_L_c" = {
"@MMK_R_H" = -32;
"@MMK_R_T" = -60;
"@MMK_R_V" = -30;
"@MMK_R_X" = 3;
"@MMK_R_Y" = -31;
"@MMK_R_a" = -10;
"@MMK_R_asterisk" = 3;
"@MMK_R_g" = 3;
"@MMK_R_hyphen" = -20;
"@MMK_R_n" = -10;
"@MMK_R_period" = -33;
};
"@MMK_L_c.sups" = {
"@MMK_R_H.sups" = -21;
"@MMK_R_T.sups" = -40;
"@MMK_R_Y.sups" = -22;
};
"@MMK_L_e" = {
"@MMK_R_A" = -15;
"@MMK_R_H" = -32;
"@MMK_R_T" = -67;
"@MMK_R_V" = -47;
"@MMK_R_X" = 3;
"@MMK_R_Y" = -49;
"@MMK_R_asterisk" = -25;
"@MMK_R_g" = -10;
"@MMK_R_period" = -33;
};
"@MMK_L_f" = {
"@MMK_R_A" = -17;
"@MMK_R_J" = 43;
"@MMK_R_O" = 20;
"@MMK_R_S" = 18;
"@MMK_R_T" = 36;
"@MMK_R_U" = 25;
"@MMK_R_V" = 35;
"@MMK_R_X" = 22;
"@MMK_R_Y" = 35;
"@MMK_R_Z" = 40;
"@MMK_R_asterisk" = 35;
"@MMK_R_g" = -12;
"@MMK_R_period" = -42;
"@MMK_R_u" = 26;
"@MMK_R_v" = 36;
"@MMK_R_x" = 27;
"@MMK_R_z" = 16;
};
"@MMK_L_g" = {
"@MMK_R_H" = -22;
"@MMK_R_J" = 16;
"@MMK_R_M" = -22;
"@MMK_R_T" = -46;
"@MMK_R_V" = -30;
"@MMK_R_Y" = -45;
"@MMK_R_Z" = -12;
"@MMK_R_a" = -14;
"@MMK_R_asterisk" = -22;
"@MMK_R_f" = -4;
"@MMK_R_j" = 16;
"@MMK_R_t" = 16;
"@MMK_R_y" = 16;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -51;
"@MMK_R_H" = -30;
"@MMK_R_J" = -30;
"@MMK_R_M" = -30;
"@MMK_R_T" = -70;
"@MMK_R_U" = -30;
"@MMK_R_V" = -83;
"@MMK_R_X" = -60;
"@MMK_R_Y" = -55;
"@MMK_R_Z" = 7;
"@MMK_R_v" = -30;
"@MMK_R_y" = -22;
};
"@MMK_L_i" = {
"@MMK_R_T" = -34;
};
"@MMK_L_j" = {
"@MMK_R_T" = -44;
"@MMK_R_period" = -43;
};
"@MMK_L_l" = {
"@MMK_R_T" = -15;
"@MMK_R_V" = -3;
"@MMK_R_v" = -3;
};
"@MMK_L_l.sups" = {
"@MMK_R_T.sups" = -4;
};
"@MMK_L_n" = {
"@MMK_R_H" = -22;
"@MMK_R_J" = -22;
"@MMK_R_S" = -11;
"@MMK_R_T" = -67;
"@MMK_R_V" = -47;
"@MMK_R_Y" = -63;
"@MMK_R_asterisk" = -67;
"@MMK_R_f" = -10;
"@MMK_R_n" = -12;
"@MMK_R_v" = -20;
};
"@MMK_L_n.sups" = {
"@MMK_R_H.sups" = -15;
"@MMK_R_T.sups" = -45;
"@MMK_R_Y.sups" = -43;
"@MMK_R_v.sups" = -12;
};
"@MMK_L_o" = {
"@MMK_R_A" = -19;
"@MMK_R_H" = -20;
"@MMK_R_J" = -43;
"@MMK_R_T" = -67;
"@MMK_R_V" = -50;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -63;
"@MMK_R_Z" = -15;
"@MMK_R_asterisk" = -45;
"@MMK_R_f" = -20;
"@MMK_R_n" = -12;
"@MMK_R_o" = 20;
"@MMK_R_p" = 0;
"@MMK_R_period" = -50;
"@MMK_R_t" = -3;
"@MMK_R_v" = -15;
"@MMK_R_x" = -16;
"@MMK_R_y" = -15;
"@MMK_R_z" = -15;
};
"@MMK_L_o.sups" = {
"@MMK_R_A.sups" = -12;
"@MMK_R_H.sups" = -13;
"@MMK_R_T.sups" = -45;
"@MMK_R_X.sups" = -16;
"@MMK_R_Y.sups" = -43;
"@MMK_R_Z.sups" = -4;
"@MMK_R_v.sups" = -3;
};
"@MMK_L_period" = {
"@MMK_R_O" = -45;
"@MMK_R_Phi" = -30;
"@MMK_R_T" = -83;
"@MMK_R_U" = -40;
"@MMK_R_V" = -92;
"@MMK_R_Y" = -101;
"@MMK_R_asterisk" = -80;
"@MMK_R_h" = -45;
"@MMK_R_o" = -50;
"@MMK_R_p" = -34;
"@MMK_R_u" = -50;
"@MMK_R_v" = -71;
"@MMK_R_y" = -62;
};
"@MMK_L_r" = {
"@MMK_R_A" = -15;
"@MMK_R_H" = -10;
"@MMK_R_J" = -20;
"@MMK_R_T" = -85;
"@MMK_R_V" = -29;
"@MMK_R_X" = -33;
"@MMK_R_Y" = -40;
"@MMK_R_a" = -10;
"@MMK_R_asterisk" = 20;
"@MMK_R_h" = 3;
"@MMK_R_hyphen" = -35;
"@MMK_R_o" = -3;
"@MMK_R_period" = -87;
"@MMK_R_v" = 13;
};
"@MMK_L_s" = {
"@MMK_R_H" = -34;
"@MMK_R_T" = -67;
"@MMK_R_V" = -49;
"@MMK_R_X" = -40;
"@MMK_R_Y" = -43;
"@MMK_R_period" = -17;
};
"@MMK_L_t" = {
"@MMK_R_H" = -21;
"@MMK_R_T" = -45;
"@MMK_R_V" = -17;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -31;
"@MMK_R_asterisk" = 22;
"@MMK_R_f" = 0;
"@MMK_R_g" = -22;
"@MMK_R_hyphen" = -15;
"@MMK_R_o" = -15;
"@MMK_R_period" = -34;
};
"@MMK_L_t.sups" = {
"@MMK_R_H.sups" = -13;
"@MMK_R_T.sups" = -30;
"@MMK_R_Y.sups" = -22;
"@MMK_R_o.sups" = -4;
};
"@MMK_L_u" = {
"@MMK_R_H" = 3;
"@MMK_R_J" = -22;
"@MMK_R_O" = -14;
"@MMK_R_T" = -75;
"@MMK_R_V" = -44;
"@MMK_R_Y" = -56;
"@MMK_R_asterisk" = -25;
"@MMK_R_f" = -10;
"@MMK_R_n" = -12;
"@MMK_R_o" = -3;
"@MMK_R_v" = -14;
};
"@MMK_L_u.sups" = {
"@MMK_R_T.sups" = -50;
"@MMK_R_Y.sups" = -38;
};
"@MMK_L_v" = {
"@MMK_R_A" = -18;
"@MMK_R_J" = -44;
"@MMK_R_M" = -22;
"@MMK_R_S" = -22;
"@MMK_R_T" = -67;
"@MMK_R_V" = -31;
"@MMK_R_X" = -26;
"@MMK_R_Y" = -38;
"@MMK_R_a" = -17;
"@MMK_R_g" = -23;
"@MMK_R_hyphen" = -30;
"@MMK_R_o" = -15;
"@MMK_R_period" = -71;
};
"@MMK_L_v.sc" = {
"@MMK_R_x.sc" = -9;
};
"@MMK_L_v.sups" = {
"@MMK_R_A.sups" = -13;
"@MMK_R_H.sups" = -18;
"@MMK_R_M.sups" = -15;
"@MMK_R_T.sups" = -45;
"@MMK_R_X.sups" = -18;
"@MMK_R_Y.sups" = -26;
"@MMK_R_o.sups" = -3;
};
"@MMK_L_x" = {
"@MMK_R_A" = 16;
"@MMK_R_T" = -67;
"@MMK_R_V" = -33;
"@MMK_R_X" = -15;
"@MMK_R_Y" = -45;
"@MMK_R_a" = -21;
"@MMK_R_g" = -21;
"@MMK_R_hyphen" = -29;
"@MMK_R_o" = -16;
};
"@MMK_L_x.sups" = {
"@MMK_R_T.sups" = -45;
"@MMK_R_Y.sups" = -30;
"@MMK_R_o.sups" = -11;
};
"@MMK_L_y" = {
"@MMK_R_A" = -10;
"@MMK_R_T" = -67;
"@MMK_R_V" = -30;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -33;
"@MMK_R_a" = -13;
"@MMK_R_hyphen" = -22;
"@MMK_R_o" = -15;
"@MMK_R_period" = -67;
};
"@MMK_L_z" = {
"@MMK_R_H" = -11;
"@MMK_R_J" = -22;
"@MMK_R_T" = -67;
"@MMK_R_V" = -53;
"@MMK_R_Y" = -35;
"@MMK_R_o" = -15;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
filter = "case == 3";
type = "x-height";
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright 2013 The Alegreya Sans Project Authors (https://github.com/huertatipografica/Alegreya-Sans)";
}
);
},
{
key = designers;
values = (
{
language = dflt;
value = "Juan Pablo del Peral; zidaizi";
}
);
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
}
);
},
{
key = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
key = familyNames;
values = (
{
language = dflt;
value = "Huānlè Sans";
},
{
language = ZHS;
value = "欢乐无衬线";
},
{
language = ZHT;
value = "歡樂無襯線";
},
{
language = ZHH;
value = "歡樂無襯線";
}
);
}
);
stems = (
{
horizontal = 1;
name = hStem0;
},
{
horizontal = 1;
name = hStem1;
},
{
horizontal = 1;
name = hStem2;
},
{
name = vStem0;
},
{
name = vStem1;
},
{
name = vStem2;
}
);
unitsPerEm = 974;
userData = {
GSDimensionPlugin.Dimensions = {
"083C0576-DCB5-487A-B9F4-85809F200F55" = {
HH = 70;
HV = 82;
OH = 71;
OV = 88;
nV = 78;
nd = 71;
oH = 60;
oV = 80;
};
"6DC2006A-28B6-4A13-A5DF-3641E0854074" = {
HH = 162;
HV = 194;
OH = 154;
OV = 210;
nV = 185;
nd = 153;
oH = 128;
oV = 182;
tH = 113;
};
UUID0 = {
HH = 20;
HV = 20;
OH = 20;
OV = 20;
nV = 20;
nd = 20;
oH = 20;
oV = 20;
tH = 20;
};
};
};
versionMajor = 2;
versionMinor = 8;
}
